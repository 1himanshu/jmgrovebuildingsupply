/****** Object:  StoredProcedure [dbo].[UDP_GEtMaxId]    Script Date: 03/25/2016 14:26:39 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UDP_GEtMaxId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UDP_GEtMaxId]
GO

/****** Object:  StoredProcedure [dbo].[UDP_GEtMaxId]    Script Date: 03/25/2016 14:26:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Unknown
-- Create date: Unknown
-- Update By:   Shabbir Kanchwala
-- Updated On:  2016-03-25
-- Description:	This procedure will give latest Install ID/Code
-- =============================================
CREATE PROCEDURE [dbo].[UDP_GEtMaxId]
(
 @designation varchar(50),  
 @status varchar(20)
)
AS
BEGIN
DECLARE @Id AS INT
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	IF (@designation = 'InstallerHelper' 
	OR @designation = 'InstallerJourneyman' 
	OR @designation = 'InstallerMechanic' 
	OR @designation = 'InstallerLeadMechanic' 
	OR @designation = 'InstallerForeman' 
	)
	BEGIN
	 SELECT @Id = MAX(Id) FROM tblInstallUsers WHERE designation in ('InstallerHelper','InstallerJourneyman','InstallerMechanic','InstallerLeadMechanic','InstallerForeman')
	END
	ELSE IF (@designation = 'CommercialOnly' 
		OR @designation = 'SubContractor' 
	)
	BEGIN
	  SELECT @Id = MAX(Id) FROM tblInstallUsers WHERE  designation in ('CommercialOnly','SubContractor')
	END
	
	SELECT InstallId FROM tblInstallUsers WHERE Id = @Id
END
GO




/****** Object:  StoredProcedure [dbo].[UDP_GetallInstallusersdataNew]    Script Date: 03/25/2016 13:55:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UDP_GetallInstallusersdataNew]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UDP_GetallInstallusersdataNew]
GO

/****** Object:  StoredProcedure [dbo].[UDP_GetallInstallusersdataNew]    Script Date: 03/25/2016 13:55:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE ProcEDURE [dbo].[UDP_GetallInstallusersdataNew] 

AS

BEGIN

	

	SELECT t.Id,t.FristName,t.LastName,t.Phone,t.Zip,t.Designation,t.Status,t.PrimeryTradeId,d.TradeName AS 'PTradeName',t.HireDate,t.InstallId,t.picture
	  FROM tblInstallUsers t LEFT OUTER JOIN Trades d
	  ON d.Id = t.PrimeryTradeId
	 --WHERE usertype = 'installer' OR usertype = 'Prospect' OR (usertype IS NULL AND Designation = 'SubContractor') OR (usertype IS NULL AND Designation = 'Installer') OR (usertype IS NULL AND (Designation = 'ForeMan' OR Designation = 'Fore Man'))
	  order by Id desc
	  


	   --WHERE t.UserType <> 'SalesUser' AND t.UserType <> 'sales' 

	--SELECT Id,FristName,Lastname,Email,Address,Designation,[Status],[Password],[Address],Phone,Picture,Attachements,Source,Notes,StatusReason 

	--from tblInstallUsers 

	--order by Id desc

	

END

--modified/created by Other Party




GO


/****** Object:  StoredProcedure [dbo].[UDP_GetInstallerUserDetailsByLoginId]    Script Date: 03/25/2016 18:37:12 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UDP_GetInstallerUserDetailsByLoginId]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UDP_GetInstallerUserDetailsByLoginId]
GO

/****** Object:  StoredProcedure [dbo].[UDP_GetInstallerUserDetailsByLoginId]    Script Date: 03/25/2016 18:37:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE ProcEDURE [dbo].[UDP_GetInstallerUserDetailsByLoginId]
@loginId varchar(50) 
AS
BEGIN
	
	SELECT Id,FristName,Lastname,Email,Address,Designation,[Status],
		[Password],[Address],Phone,Picture,Attachements,usertype 
	from tblInstallUsers 
	where (Email = @loginId )  
	 AND 
	(Status='OfferMade' OR Status='Offer Made' OR Status='Active')
	
	--# This query does not make sense, the guy was really stupid.
	/*SELECT Id,FristName,Lastname,Email,Address,Designation,[Status],
		[Password],[Address],Phone,Picture,Attachements,usertype 
	from tblInstallUsers 
	where (Email = @loginId and Status='Active')  OR 
	(Email = @loginId AND (Designation = 'SubContractor' OR Designation='Installer') AND 
	(Status='OfferMade' OR Status='Offer Made' OR Status='Active'))*/
END



GO



/****** Object:  StoredProcedure [dbo].[USP_UpdateInstallerStatus]    Script Date: 03/25/2016 20:55:34 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_UpdateInstallerStatus]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_UpdateInstallerStatus]
GO


/****** Object:  StoredProcedure [dbo].[USP_UpdateInstallerStatus]    Script Date: 03/25/2016 20:55:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Shabbir Kanchwala
-- Create date: 2016-03-25
-- Description:	This procedure updates the status
-- =============================================
CREATE PROCEDURE [dbo].[USP_UpdateInstallerStatus]
@id int,  
@status varchar(30),
@result int output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	update tblInstallUsers 
	set [Status] = @status
	WHERE Id=@id  
	Set @result ='1'  
       Begin         
          Set @result ='0'        
       end  
        return @result  
END


GO


/****** Object:  StoredProcedure [dbo].[USP_GetRequestMaterialList]    Script Date: 03/29/2016 16:18:00 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_GetRequestMaterialList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_GetRequestMaterialList]
GO

/****** Object:  StoredProcedure [dbo].[USP_GetRequestMaterialList]    Script Date: 03/29/2016 16:18:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Shabbir Kanchwala
-- Create date: 2016-03-22
-- Description:	This procedure will return custom material list
-- Test Run:    USP_GetRequestMaterialList 'C3690-SJ1', 3690
-- =============================================
CREATE PROCEDURE [dbo].[USP_GetRequestMaterialList]
(
	@soldJobId varchar(50),
	@customerID int,
	@InstallerID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT 
	DISTINCT c.ProductCatID,
	PM.ProductName
FROM tblCustom_MaterialList c 
INNER JOIN tblProductMaster PM ON PM.productid = c.ProductCatID
WHERE c.SoldJobID = @SoldJobID --and c.InstallerID = @InstallerID

SELECT cm.MaterialList
	,cm.VendorCategoryId 
	,vc.VendorCategoryNm
	,v.VendorName  
	,cm.Amount 
	,cm.VendorId 
	,cm.Line 
	,cm.JGSkuPartNo
	,cm.Quantity
	,cm.UOM
	,cm.MaterialCost
	,cm.extend
	,cm.VendorIds
	,cm.Total
	,cd.DocName
	,cd.TempName
	,cm.Id
	,cm.ProductCatID
	,PM.ProductName
	,cm.InstallerID,cm.RequestStatus
	,ISNULL(cm.IsForemanPermission,'') as IsForemanPermission
	,ISNULL(cm.IsSrSalemanPermissionF,'') as IsSrSalemanPermissionF
	,ISNULL(cm.IsAdminPermission,'') as IsAdminPermission
	,ISNULL(cm.IsSrSalemanPermissionA,'') as IsSrSalemanPermissionA
	,ISNULL(cm.EmailStatus,'') as EmailStatus
	,ISNULL(up.Id, 0) AS lastUpdatedByID	,ISNULL(up.firstname, '') as lastUpdatedByFirstName, ISNULL(up.LastName, '') as lastUpdatedByLastName, ISNULL(up.Username, '') as lastUpdatedByUserName
	,ISNULL(FM.Id, 0) AS foremanID	,ISNULL(FM.firstname, '') as foremanFirstName, ISNULL(FM.LastName, '') as foremanLastName, ISNULL(FM.Username, '') as foremanUserName
	,ISNULL(SLF.Id, 0) AS SLFID	,ISNULL(SLF.firstname, '') as SLFFirstName, ISNULL(SLF.LastName, '') as SLFLastName, ISNULL(SLF.Username, '') as SLFUserName
	,ISNULL(SLA.Id, 0) AS SLAID	,ISNULL(SLA.firstname, '') as SLAFirstName, ISNULL(SLA.LastName, '') as SLALastName, ISNULL(SLA.Username, '') as SLAUserName
	,ISNULL(AD.Id, 0) AS ADID	,ISNULL(AD.firstname, '') as ADFirstName, ISNULL(AD.LastName, '') as ADLastName, ISNULL(AD.Username, '') as ADUserName
	FROM tblCustom_MaterialList cm 
	LEFT OUTER JOIN tblVendorCategory vc on vc.VendorCategpryId =cm.VendorCategoryId
	LEFT OUTER JOIN tblProductMaster PM ON PM.productid = cm.ProductCatID
	LEFT OUTER JOIN tblVendors v on v.VendorId =cm.VendorId 
	--inner join tblJobSequence js on js.SoldJobId=cm.SoldJobId--js.Id=cm.JobSequenceId 
	LEFT JOIN tblVendorQuotes cd on cd.SoldJobId=cm.SoldJobId and cd.VendorId=cm.VendorId
	-- tblCustomersDocument cd on cd.CustomerId =js.CustomerId and cd.ProductId=js.EstimateId and cd.ProductTypeId=js.ProductId and cd.VendorId=cm.VendorId and cd.DocType= 'VendorQuotes' 
	LEFT OUTER JOIN tblUsers FM on FM.id = cm.ForemanApproverID
	LEFT OUTER JOIN tblUsers SLF on SLF.id = cm.SrSalesFApproverID
	LEFT OUTER JOIN tblUsers SLA on SLA.id = cm.SrSalesAApproverID
	LEFT OUTER JOIN tblUsers AD on AD.id = cm.AdminApproverID
	LEFT OUTER JOIN tblUsers up on up.id = cm.updatedby
	WHERE cm.SoldJobId=@soldJobId --and cm.InstallerID = @InstallerID
	ORDER BY cm.Id
	
	EXEC UDP_GetSoldJobsForProcurementBySoldJobID @soldJobId   
    
 SELECT IU.Id,IU.FristName +' '+ IU.LastName  as QualifiedName from tblInstallUsers IU Where IU.Status IN ('Active', 'Offer Made') 
	AND NOT EXISTS (Select 1 from tblCustomMaterialInstaller CSI WHERE CSI.SoldJobID = @soldJobId AND IU.Id = CSI.InstallerID)

	SELECT 
		CSI.ID,
		CSI.InstallerID,
		IU.FristName + ' ' + IU.LastName AS QualifiedName,
		CSI.AddedDateTime,
		CSI.UpdatedDateTime 
	FROM tblCustomMaterialInstaller CSI 
	INNER JOIN tblInstallUsers IU ON IU.Id = CSI.InstallerID
	WHERE CSI.SoldJobID = @soldJobId
	
END



GO

/****** Object:  StoredProcedure [dbo].[USP_GetCustomMaterialList]    Script Date: 03/29/2016 18:02:02 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_GetCustomMaterialList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_GetCustomMaterialList]
GO

/****** Object:  StoredProcedure [dbo].[USP_GetCustomMaterialList]    Script Date: 03/29/2016 18:02:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Shabbir Kanchwala
-- Create date: 2016-03-08
-- Description:	This procedure will return custom material list
-- Test Run:    USP_GetCustomMaterialList 'C3690-SJ1', 3690
-- =============================================
CREATE PROCEDURE [dbo].[USP_GetCustomMaterialList]
(
	@soldJobId varchar(50),
	@customerID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT 
	DISTINCT c.ProductCatID,
	PM.ProductName, 
	'' AS RequestStatus --#Shabbir: Placeholder for business logic
FROM tblCustom_MaterialList c 
INNER JOIN tblProductMaster PM ON PM.productid = c.ProductCatID
WHERE c.SoldJobID = @SoldJobID

SELECT cm.MaterialList
	,cm.VendorCategoryId 
	,vc.VendorCategoryNm
	,v.VendorName  
	,cm.Amount 
	,cm.VendorId 
	,cm.Line 
	,cm.JGSkuPartNo
	,cm.Quantity
	,cm.UOM
	,cm.MaterialCost
	,cm.extend
	,cm.VendorIds
	,cm.Total
	,cd.DocName
	,cd.TempName
	,cm.Id
	,cm.ProductCatID
	,cm.InstallerID
	,cm.RequestStatus
	,PM.ProductName
	,ISNULL(cm.IsForemanPermission,'') as IsForemanPermission
	,ISNULL(cm.IsSrSalemanPermissionF,'') as IsSrSalemanPermissionF
	,ISNULL(cm.IsAdminPermission,'') as IsAdminPermission
	,ISNULL(cm.IsSrSalemanPermissionA,'') as IsSrSalemanPermissionA
	,ISNULL(cm.EmailStatus,'') as EmailStatus
	,ISNULL(up.Id, 0) AS lastUpdatedByID	,ISNULL(up.firstname, '') as lastUpdatedByFirstName, ISNULL(up.LastName, '') as lastUpdatedByLastName, ISNULL(up.Username, '') as lastUpdatedByUserName
	,ISNULL(FM.Id, 0) AS foremanID	,ISNULL(FM.firstname, '') as foremanFirstName, ISNULL(FM.LastName, '') as foremanLastName, ISNULL(FM.Username, '') as foremanUserName
	,ISNULL(SLF.Id, 0) AS SLFID	,ISNULL(SLF.firstname, '') as SLFFirstName, ISNULL(SLF.LastName, '') as SLFLastName, ISNULL(SLF.Username, '') as SLFUserName
	,ISNULL(SLA.Id, 0) AS SLAID	,ISNULL(SLA.firstname, '') as SLAFirstName, ISNULL(SLA.LastName, '') as SLALastName, ISNULL(SLA.Username, '') as SLAUserName
	,ISNULL(AD.Id, 0) AS ADID	,ISNULL(AD.firstname, '') as ADFirstName, ISNULL(AD.LastName, '') as ADLastName, ISNULL(AD.Username, '') as ADUserName
	FROM tblCustom_MaterialList cm 
	LEFT OUTER JOIN tblVendorCategory vc on vc.VendorCategpryId =cm.VendorCategoryId
	LEFT OUTER JOIN tblProductMaster PM ON PM.productid = cm.ProductCatID
	LEFT OUTER JOIN tblVendors v on v.VendorId =cm.VendorId 
	--inner join tblJobSequence js on js.SoldJobId=cm.SoldJobId--js.Id=cm.JobSequenceId 
	LEFT JOIN tblVendorQuotes cd on cd.SoldJobId=cm.SoldJobId and cd.VendorId=cm.VendorId
	-- tblCustomersDocument cd on cd.CustomerId =js.CustomerId and cd.ProductId=js.EstimateId and cd.ProductTypeId=js.ProductId and cd.VendorId=cm.VendorId and cd.DocType= 'VendorQuotes' 
	LEFT OUTER JOIN tblUsers FM on FM.id = cm.ForemanApproverID
	LEFT OUTER JOIN tblUsers SLF on SLF.id = cm.SrSalesFApproverID
	LEFT OUTER JOIN tblUsers SLA on SLA.id = cm.SrSalesAApproverID
	LEFT OUTER JOIN tblUsers AD on AD.id = cm.AdminApproverID
	LEFT OUTER JOIN tblUsers up on up.id = cm.updatedby
	WHERE cm.SoldJobId=@soldJobId
	ORDER BY cm.Id
	
	EXEC UDP_GetSoldJobsForProcurementBySoldJobID @soldJobId   
    
    SELECT IU.Id,IU.FristName +' '+ IU.LastName  as QualifiedName from tblInstallUsers IU Where IU.Status IN ('Active', 'Offer Made') 
	AND NOT EXISTS (Select 1 from tblCustomMaterialInstaller CSI WHERE CSI.SoldJobID = @soldJobId AND IU.Id = CSI.InstallerID)

	SELECT 
		CSI.ID,
		CSI.InstallerID,
		IU.FristName + ' ' + IU.LastName AS QualifiedName,
		CSI.AddedDateTime,
		CSI.UpdatedDateTime 
	FROM tblCustomMaterialInstaller CSI 
	INNER JOIN tblInstallUsers IU ON IU.Id = CSI.InstallerID
	WHERE CSI.SoldJobID = @soldJobId
END


GO





