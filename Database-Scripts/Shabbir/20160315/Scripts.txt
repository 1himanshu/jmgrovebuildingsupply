
/****** Object:  StoredProcedure [dbo].[USP_GetCustomMaterialList]    Script Date: 03/14/2016 14:51:32 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_GetCustomMaterialList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[USP_GetCustomMaterialList]
GO


/****** Object:  StoredProcedure [dbo].[USP_GetCustomMaterialList]    Script Date: 03/14/2016 14:51:32 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Shabbir Kanchwala
-- Create date: 2016-03-08
-- Description:	This procedure will return custom material list
-- Test Run:    USP_GetCustomMaterialList 'C3690-SJ1', 3690
-- =============================================
CREATE PROCEDURE [dbo].[USP_GetCustomMaterialList]
(
	@soldJobId varchar(50),
	@customerID int
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

SELECT 
	DISTINCT c.ProductCatID,
	PM.ProductName
FROM tblCustom_MaterialList c 
INNER JOIN tblProductMaster PM ON PM.productid = c.ProductCatID
WHERE c.SoldJobID = @SoldJobID

SELECT cm.MaterialList
	,cm.VendorCategoryId 
	,vc.VendorCategoryNm
	,v.VendorName  
	,cm.Amount 
	,cm.VendorId 
	,cm.Line 
	,cm.JGSkuPartNo
	,cm.Quantity
	,cm.UOM
	,cm.MaterialCost
	,cm.extend
	,cm.VendorIds
	,cm.Total
	,cd.DocName
	,cd.TempName
	,cm.Id
	,cm.ProductCatID
	,PM.ProductName
	,ISNULL(cm.IsForemanPermission,'') as IsForemanPermission
	,ISNULL(cm.IsSrSalemanPermissionF,'') as IsSrSalemanPermissionF
	,ISNULL(cm.IsAdminPermission,'') as IsAdminPermission
	,ISNULL(cm.IsSrSalemanPermissionA,'') as IsSrSalemanPermissionA
	,ISNULL(cm.EmailStatus,'') as EmailStatus
	,ISNULL(up.Id, 0) AS lastUpdatedByID	,ISNULL(up.firstname, '') as lastUpdatedByFirstName, ISNULL(up.LastName, '') as lastUpdatedByLastName, ISNULL(up.Username, '') as lastUpdatedByUserName
	,ISNULL(FM.Id, 0) AS foremanID	,ISNULL(FM.firstname, '') as foremanFirstName, ISNULL(FM.LastName, '') as foremanLastName, ISNULL(FM.Username, '') as foremanUserName
	,ISNULL(SLF.Id, 0) AS SLFID	,ISNULL(SLF.firstname, '') as SLFFirstName, ISNULL(SLF.LastName, '') as SLFLastName, ISNULL(SLF.Username, '') as SLFUserName
	,ISNULL(SLA.Id, 0) AS SLAID	,ISNULL(SLA.firstname, '') as SLAFirstName, ISNULL(SLA.LastName, '') as SLALastName, ISNULL(SLA.Username, '') as SLAUserName
	,ISNULL(AD.Id, 0) AS ADID	,ISNULL(AD.firstname, '') as ADFirstName, ISNULL(AD.LastName, '') as ADLastName, ISNULL(AD.Username, '') as ADUserName
	FROM tblCustom_MaterialList cm 
	LEFT OUTER JOIN tblVendorCategory vc on vc.VendorCategpryId =cm.VendorCategoryId
	LEFT OUTER JOIN tblProductMaster PM ON PM.productid = cm.ProductCatID
	LEFT OUTER JOIN tblVendors v on v.VendorId =cm.VendorId 
	--inner join tblJobSequence js on js.SoldJobId=cm.SoldJobId--js.Id=cm.JobSequenceId 
	LEFT JOIN tblVendorQuotes cd on cd.SoldJobId=cm.SoldJobId and cd.VendorId=cm.VendorId
	-- tblCustomersDocument cd on cd.CustomerId =js.CustomerId and cd.ProductId=js.EstimateId and cd.ProductTypeId=js.ProductId and cd.VendorId=cm.VendorId and cd.DocType= 'VendorQuotes' 
	LEFT OUTER JOIN tblUsers FM on FM.id = cm.ForemanApproverID
	LEFT OUTER JOIN tblUsers SLF on SLF.id = cm.SrSalesFApproverID
	LEFT OUTER JOIN tblUsers SLA on SLA.id = cm.SrSalesAApproverID
	LEFT OUTER JOIN tblUsers AD on AD.id = cm.AdminApproverID
	LEFT OUTER JOIN tblUsers up on up.id = cm.updatedby
	WHERE cm.SoldJobId=@soldJobId
	ORDER BY cm.Id
	
	EXEC UDP_GetSoldJobsForProcurementBySoldJobID @soldJobId   
    
    
END


GO



/****** Object:  StoredProcedure [dbo].[UDP_Add_Custom_MaterialList]    Script Date: 03/14/2016 14:36:33 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UDP_Add_Custom_MaterialList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[UDP_Add_Custom_MaterialList]
GO


/****** Object:  StoredProcedure [dbo].[UDP_Add_Custom_MaterialList]    Script Date: 03/14/2016 14:36:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[UDP_Add_Custom_MaterialList]
@soldJobId varchar(50),
@materialList varchar(500),
@vendorCategoryId int,
@vendorId int,
@amount decimal(18,2),
@foremanPermission char(1),
@salesmanPermissionF char(1),
@adminPermission char(1),
@salesmanPermissionA char(1),
@emailStatus char(1),
-------------------------New Variables--------------------------------------------
@FormanEmail	varchar(100) = '',
@SrSalesEmail	varchar(100) = '',
@AdminEmail	varchar(100) = '',
@SrSalemanAEmail	varchar(100) = '',
@ProductCatId	int = 0,
@Line	varchar(100) = '',
@JGSkuPartNo	varchar(70) = '',
@Description	varchar(MAX) = '',
@Quantity	int = 0,
@UOM	varchar(50) = '',
@VendorQuotesPath	varchar(MAX) = '',
@MaterialCost	decimal(18, 0) = 0,
@extend	varchar(100) = '',
@Total	decimal(18, 0) = 0,
@JobSeqId	int = 0,
@VendorIds varchar(MAX) = '',


@Visible varchar(50),
@ID int
------------------------------------------------------------------------------------
--@productId int,
--@estimateId int
AS
BEGIN
declare @jobId int=0
	--select @jobId=id  from tblJobSequence where SoldJobId =@soldJobId and ProductId=@productId and EstimateId=@estimateId
	DECLARE @SN INT = 0
	Select @SN = COUNT(ID) from [tblCustom_MaterialList] where SoldJobId =@soldJobId  
	SET @SN = @SN + 1;
	select @jobId=id  from tblJobSequence where SoldJobId =@soldJobId 
	
	--# Shabbir Kanchwala, We are updating the list.
	if(@ID > 0)
	BEGIN
		UPDATE [tblCustom_MaterialList]
		SET MaterialList = @materialList,
		VendorCategoryId = @vendorCategoryId,
		VendorId = @VendorId,
		Amount = @amount,
		VendorIds = @VendorIds,
		--Line = @Line,
		JGSkuPartNo = @JGSkuPartNo,
		Quantity = @Quantity,
		UOM = @UOM,
		MaterialCost = @MaterialCost,
		extend = @extend
		WHERE Id = @ID
		
		return;
	END

	if(@VendorIds =0)
	begin

	INSERT INTO [dbo].[tblCustom_MaterialList]
		   ([SoldJobId],[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId],Visible)
     VALUES(@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@SN,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@jobId,@Visible)



	--INSERT INTO [dbo].[tblCustom_MaterialList]
	--	   ([SoldJobId],[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId])
 --    VALUES(@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@Line,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@JobSeqId)




		--insert into tblcustom_MaterialList (SoldJobId,[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA])
		--values (@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA)
	end
	else
	begin

	--INSERT INTO [dbo].[tblCustom_MaterialList]
	--	   ([SoldJobId],[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId],[VendorIds])
 --    VALUES(@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@Line,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@jobId,@VendorIds)



	--INSERT INTO [dbo].[tblCustom_MaterialList]
	--	   ([SoldJobId],[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId],[VendorIds])
 --    VALUES(@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@Line,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@JobSeqId,@VendorIds)


		--INSERT INTO [dbo].[tblCustom_MaterialList]
		--   ([SoldJobId],[MaterialList],[EmailStatus],[VendorCategoryId],[Amount],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId])
  --   VALUES(@soldJobId ,@materialList,@emailStatus ,@vendorCategoryId,@amount,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@Line,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@JobSeqId)
		
		
		
		insert into tblcustom_MaterialList (SoldJobId,[MaterialList],[VendorCategoryId],[VendorId],[Amount],[EmailStatus],[IsForemanPermission],[IsSrSalemanPermissionF],[IsAdminPermission],[IsSrSalemanPermissionA],[FormanEmail],[SrSalesEmail],[AdminEmail],[SrSalemanAEmail],[ProductCatId],[Line],[JGSkuPartNo],[Description],[Quantity],[UOM],[VendorQuotesPath],[MaterialCost],[extend],[Total],[JobSeqId],[VendorIds],Visible)
		values (@soldJobId ,@materialList ,@vendorCategoryId,@vendorId ,@amount,@emailStatus,@foremanPermission,@salesmanPermissionF,@adminPermission,@salesmanPermissionA,@FormanEmail,@SrSalesEmail,@AdminEmail,@SrSalemanAEmail,@ProductCatId,@SN,@JGSkuPartNo,@Description,@Quantity,@UOM,@VendorQuotesPath,@MaterialCost,@extend,@Total,@jobId,@VendorIds,@Visible)
	end
END




GO

/****** Object:  StoredProcedure [dbo].[usp_GetVendors]    Script Date: 03/14/2016 16:51:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_GetVendors]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_GetVendors]
GO

/****** Object:  StoredProcedure [dbo].[usp_GetVendors]    Script Date: 03/14/2016 16:51:06 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Shabbir Kanchwala
-- Create date: 2016-03-11
-- Description:	This procedure will get vendor details
-- Test Run: usp_GetVendors '1,2,3,4'
-- =============================================
CREATE PROCEDURE [dbo].[usp_GetVendors]
@VendorIds varchar(max)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @SQLQry NVARCHAR(MAX) = ''
	SET @SQLQry = 'select VendorName ,Email,VendorId FROM tblVendors WHERE VendorId IN ('+ @VendorIds+ ' )'
	EXEC sp_executesql @SQLQry
END

GO




